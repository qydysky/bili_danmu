name: TestGitea

on:
  push:
    branches:
      - '**'
    paths:
      - '**.yml'
      - '**.go'
      - '**.mod'
      - '**.sum'
      - '**.flv'
      - '**.mp4'
env:
  R: ${{ vars.R }}

jobs:
  buildtest:
    name: test_ubuntu_go
    runs-on: linux_amd64
    strategy:
      matrix:
        go: [ '1.25' ]
    steps:
    - name: Set up Go${{ matrix.go }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Check out code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Checkout LFS objects
      run: git lfs checkout

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        args: --timeout 5m --verbose

    - name: Test
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libcairo2-dev libglib2.0-dev
        export r=${R:-92613}
        go get .
        go mod vendor
        CGO_ENABLED=1 go test -v --cover -coverprofile=coverage -race -count=1 ./...
      
    - name: zip
      run: zip -q -r vendor.zip vendor
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3 
      with:
        name: vendor.zip
        path: ./vendor.zip

  u-build:
    name: build_ubuntu_go
    needs: [buildtest]
    runs-on: linux_amd64
    strategy:
      matrix:
        go: [ '1.25' ]
    steps:
    - name: Set up Go${{ matrix.go }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Check out code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Checkout LFS objects
      run: git lfs checkout

    - name: Build
      run: |
        git rev-parse --short HEAD > CV/VERSION
        cd demo
        sudo apt-get update
        sudo apt-get install -f libgtk-3-dev libcairo2-dev libglib2.0-dev
        go get .
        CGO_ENABLED=0 go build -pgo=auto -v -buildmode=exe main.go
        GOEXPERIMENT=greenteagc,jsonv2 CGO_ENABLED=0 go build -pgo=auto -v -buildmode=exe -o experiment main.go
      
    - name: zip
      run: zip -q -r ubuntu_go${{ matrix.go }}.zip demo

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu_go${{ matrix.go }}.zip
        path: ./ubuntu_go${{ matrix.go }}.zip
        